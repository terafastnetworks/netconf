<?xml version="1.0" encoding="UTF-8"?><testsuite name="nosetests" tests="13" errors="0" failures="2" skip="0"><testcase classname="test_product_information.test_product_information" name="test_get_egress_ports_has_opm" time="0.986"><system-out><![CDATA[


]]></system-out></testcase><testcase classname="test_product_information.test_product_information" name="test_get_egress_ports_has_oxc" time="0.479"><system-out><![CDATA[


]]></system-out></testcase><testcase classname="test_product_information.test_product_information" name="test_get_egress_ports_port_type" time="0.480"><system-out><![CDATA[


]]></system-out></testcase><testcase classname="test_product_information.test_product_information" name="test_get_ingress_and_egress_ports_has_opm" time="0.481"><failure type="exceptions.AssertionError" message="'PASS' != 'FAIL'&#10;-------------------- &gt;&gt; begin captured logging &lt;&lt; --------------------&#10;polatis: INFO: &#10;&#10;       +------------------------------------------------+       &#10;       |    test_get_ingress_and_egress_ports_has_opm   |&#10;       +------------------------------------------------+       &#10;&#10;&#10;polatis: INFO: -----[ create xml for get operation ]-----&#10;&#10;polatis: INFO: &#10;&#10;&lt;opsw:product-information xmlns:opsw=&quot;http://www.polatis.com/yang/optical-switch&quot; xmlns:plts=&quot;http://www.polatis.com/yang/polatis-switch&quot;&gt;&lt;opsw:ports&gt;&lt;opsw:port-id&gt;1&lt;/opsw:port-id&gt;&lt;opsw:has_opm /&gt;&lt;/opsw:ports&gt;&lt;opsw:ports&gt;&lt;opsw:port-id&gt;384&lt;/opsw:port-id&gt;&lt;opsw:has_opm /&gt;&lt;/opsw:ports&gt;&lt;opsw:ports&gt;&lt;opsw:port-id&gt;767&lt;/opsw:port-id&gt;&lt;opsw:has_opm /&gt;&lt;/opsw:ports&gt;&lt;/opsw:product-information&gt;&#10;polatis: INFO: -----[ get - response from the switch ]-----&#10;&#10;&lt;?xml version=&quot;1.0&quot; ?&gt;&#10;&lt;data xmlns=&quot;urn:ietf:params:xml:ns:netconf:base:1.0&quot; xmlns:nc=&quot;urn:ietf:params:xml:ns:netconf:base:1.0&quot;&gt;&#10; &lt;product-information xmlns=&quot;http://www.polatis.com/yang/optical-switch&quot;&gt;&#10;  &lt;ports&gt;&#10;   &lt;port-id&gt;1&lt;/port-id&gt;&#10;   &lt;has_opm&gt;true&lt;/has_opm&gt;&#10;  &lt;/ports&gt;&#10;  &lt;ports&gt;&#10;   &lt;port-id&gt;384&lt;/port-id&gt;&#10;   &lt;has_opm&gt;true&lt;/has_opm&gt;&#10;  &lt;/ports&gt;&#10;  &lt;ports&gt;&#10;   &lt;port-id&gt;767&lt;/port-id&gt;&#10;   &lt;has_opm&gt;false&lt;/has_opm&gt;&#10;  &lt;/ports&gt;&#10; &lt;/product-information&gt;&#10;&lt;/data&gt;&#10;&#10;&#10;polatis: INFO: -----[ validate product information ]-----&#10;&#10;&#10;polatis: INFO: existing_product_info : ['1', '384', '767', 'false', 'false', 'false'] &#10;&#10;polatis: INFO: required_product_info : ['1', '384', '767', 'true', 'true', 'false']&#10;&#10;&#10;polatis: ERROR: comparision failed : FAIL&#10;&#10;--------------------- &gt;&gt; end captured logging &lt;&lt; ---------------------"><![CDATA[  File "/usr/lib/python2.7/unittest/case.py", line 331, in run
    testMethod()
  File "/usr/lib/python2.7/dist-packages/nose/case.py", line 197, in runTest
    self.test(*self.arg)
  File "/home/polatis/netconf/user/test_product_information.py", line 115, in test_get_ingress_and_egress_ports_has_opm
    file_name='test_get_ingress_and_egress_ports_has_opm.xml')
  File "/home/polatis/netconf/user/lib/product_information.py", line 589, in get_egress_ports_has_opm_info
    nose.tools.assert_equals('PASS', result)
  File "/usr/lib/python2.7/unittest/case.py", line 515, in assertEqual
    assertion_func(first, second, msg=msg)
  File "/usr/lib/python2.7/unittest/case.py", line 508, in _baseAssertEqual
    raise self.failureException(msg)
'\'PASS\' != \'FAIL\'\n-------------------- >> begin captured logging << --------------------\npolatis: INFO: \n\n       +------------------------------------------------+       \n       |    test_get_ingress_and_egress_ports_has_opm   |\n       +------------------------------------------------+       \n\n\npolatis: INFO: -----[ create xml for get operation ]-----\n\npolatis: INFO: \n\n<opsw:product-information xmlns:opsw="http://www.polatis.com/yang/optical-switch" xmlns:plts="http://www.polatis.com/yang/polatis-switch"><opsw:ports><opsw:port-id>1</opsw:port-id><opsw:has_opm /></opsw:ports><opsw:ports><opsw:port-id>384</opsw:port-id><opsw:has_opm /></opsw:ports><opsw:ports><opsw:port-id>767</opsw:port-id><opsw:has_opm /></opsw:ports></opsw:product-information>\npolatis: INFO: -----[ get - response from the switch ]-----\n\n<?xml version="1.0" ?>\n<data xmlns="urn:ietf:params:xml:ns:netconf:base:1.0" xmlns:nc="urn:ietf:params:xml:ns:netconf:base:1.0">\n <product-information xmlns="http://www.polatis.com/yang/optical-switch">\n  <ports>\n   <port-id>1</port-id>\n   <has_opm>true</has_opm>\n  </ports>\n  <ports>\n   <port-id>384</port-id>\n   <has_opm>true</has_opm>\n  </ports>\n  <ports>\n   <port-id>767</port-id>\n   <has_opm>false</has_opm>\n  </ports>\n </product-information>\n</data>\n\n\npolatis: INFO: -----[ validate product information ]-----\n\n\npolatis: INFO: existing_product_info : [\'1\', \'384\', \'767\', \'false\', \'false\', \'false\'] \n\npolatis: INFO: required_product_info : [\'1\', \'384\', \'767\', \'true\', \'true\', \'false\']\n\n\npolatis: ERROR: comparision failed : FAIL\n\n--------------------- >> end captured logging << ---------------------']]></failure><system-out><![CDATA[


]]></system-out></testcase><testcase classname="test_product_information.test_product_information" name="test_get_ingress_and_egress_ports_has_oxc" time="0.480"><system-out><![CDATA[


]]></system-out></testcase><testcase classname="test_product_information.test_product_information" name="test_get_ingress_and_egress_ports_port_type" time="0.525"><system-out><![CDATA[


]]></system-out></testcase><testcase classname="test_product_information.test_product_information" name="test_get_ingress_ports_has_opm" time="0.475"><failure type="exceptions.AssertionError" message="'PASS' != 'FAIL'&#10;-------------------- &gt;&gt; begin captured logging &lt;&lt; --------------------&#10;polatis: INFO: &#10;&#10;       +-------------------------------------+       &#10;       |    test_get_ingress_ports_has_opm   |&#10;       +-------------------------------------+       &#10;&#10;&#10;polatis: INFO: -----[ create xml for get operation ]-----&#10;&#10;polatis: INFO: &#10;&#10;&lt;opsw:product-information xmlns:opsw=&quot;http://www.polatis.com/yang/optical-switch&quot; xmlns:plts=&quot;http://www.polatis.com/yang/polatis-switch&quot;&gt;&lt;opsw:ports&gt;&lt;opsw:port-id&gt;1&lt;/opsw:port-id&gt;&lt;opsw:has_opm /&gt;&lt;/opsw:ports&gt;&lt;opsw:ports&gt;&lt;opsw:port-id&gt;2&lt;/opsw:port-id&gt;&lt;opsw:has_opm /&gt;&lt;/opsw:ports&gt;&lt;opsw:ports&gt;&lt;opsw:port-id&gt;3&lt;/opsw:port-id&gt;&lt;opsw:has_opm /&gt;&lt;/opsw:ports&gt;&lt;/opsw:product-information&gt;&#10;polatis: INFO: -----[ get - response from the switch ]-----&#10;&#10;&lt;?xml version=&quot;1.0&quot; ?&gt;&#10;&lt;data xmlns=&quot;urn:ietf:params:xml:ns:netconf:base:1.0&quot; xmlns:nc=&quot;urn:ietf:params:xml:ns:netconf:base:1.0&quot;&gt;&#10; &lt;product-information xmlns=&quot;http://www.polatis.com/yang/optical-switch&quot;&gt;&#10;  &lt;ports&gt;&#10;   &lt;port-id&gt;1&lt;/port-id&gt;&#10;   &lt;has_opm&gt;true&lt;/has_opm&gt;&#10;  &lt;/ports&gt;&#10;  &lt;ports&gt;&#10;   &lt;port-id&gt;2&lt;/port-id&gt;&#10;   &lt;has_opm&gt;true&lt;/has_opm&gt;&#10;  &lt;/ports&gt;&#10;  &lt;ports&gt;&#10;   &lt;port-id&gt;3&lt;/port-id&gt;&#10;   &lt;has_opm&gt;true&lt;/has_opm&gt;&#10;  &lt;/ports&gt;&#10; &lt;/product-information&gt;&#10;&lt;/data&gt;&#10;&#10;&#10;polatis: INFO: -----[ validate product information ]-----&#10;&#10;&#10;polatis: INFO: existing_product_info : ['1', '2', '3', 'false', 'false', 'false'] &#10;&#10;polatis: INFO: required_product_info : ['1', '2', '3', 'true', 'true', 'true']&#10;&#10;&#10;polatis: ERROR: comparision failed : FAIL&#10;&#10;--------------------- &gt;&gt; end captured logging &lt;&lt; ---------------------"><![CDATA[  File "/usr/lib/python2.7/unittest/case.py", line 331, in run
    testMethod()
  File "/usr/lib/python2.7/dist-packages/nose/case.py", line 197, in runTest
    self.test(*self.arg)
  File "/home/polatis/netconf/user/test_product_information.py", line 72, in test_get_ingress_ports_has_opm
    file_name='test_get_ingress_ports_has_opm.xml')
  File "/home/polatis/netconf/user/lib/product_information.py", line 417, in get_ingress_ports_has_opm_info
    nose.tools.assert_equals('PASS', result)
  File "/usr/lib/python2.7/unittest/case.py", line 515, in assertEqual
    assertion_func(first, second, msg=msg)
  File "/usr/lib/python2.7/unittest/case.py", line 508, in _baseAssertEqual
    raise self.failureException(msg)
'\'PASS\' != \'FAIL\'\n-------------------- >> begin captured logging << --------------------\npolatis: INFO: \n\n       +-------------------------------------+       \n       |    test_get_ingress_ports_has_opm   |\n       +-------------------------------------+       \n\n\npolatis: INFO: -----[ create xml for get operation ]-----\n\npolatis: INFO: \n\n<opsw:product-information xmlns:opsw="http://www.polatis.com/yang/optical-switch" xmlns:plts="http://www.polatis.com/yang/polatis-switch"><opsw:ports><opsw:port-id>1</opsw:port-id><opsw:has_opm /></opsw:ports><opsw:ports><opsw:port-id>2</opsw:port-id><opsw:has_opm /></opsw:ports><opsw:ports><opsw:port-id>3</opsw:port-id><opsw:has_opm /></opsw:ports></opsw:product-information>\npolatis: INFO: -----[ get - response from the switch ]-----\n\n<?xml version="1.0" ?>\n<data xmlns="urn:ietf:params:xml:ns:netconf:base:1.0" xmlns:nc="urn:ietf:params:xml:ns:netconf:base:1.0">\n <product-information xmlns="http://www.polatis.com/yang/optical-switch">\n  <ports>\n   <port-id>1</port-id>\n   <has_opm>true</has_opm>\n  </ports>\n  <ports>\n   <port-id>2</port-id>\n   <has_opm>true</has_opm>\n  </ports>\n  <ports>\n   <port-id>3</port-id>\n   <has_opm>true</has_opm>\n  </ports>\n </product-information>\n</data>\n\n\npolatis: INFO: -----[ validate product information ]-----\n\n\npolatis: INFO: existing_product_info : [\'1\', \'2\', \'3\', \'false\', \'false\', \'false\'] \n\npolatis: INFO: required_product_info : [\'1\', \'2\', \'3\', \'true\', \'true\', \'true\']\n\n\npolatis: ERROR: comparision failed : FAIL\n\n--------------------- >> end captured logging << ---------------------']]></failure><system-out><![CDATA[


]]></system-out></testcase><testcase classname="test_product_information.test_product_information" name="test_get_ingress_ports_has_oxc" time="0.473"><system-out><![CDATA[


]]></system-out></testcase><testcase classname="test_product_information.test_product_information" name="test_get_ingress_ports_port_type" time="0.727"><system-out><![CDATA[


]]></system-out></testcase><testcase classname="test_product_information.test_product_information" name="test_get_manufacturer" time="0.472"><system-out><![CDATA[


]]></system-out></testcase><testcase classname="test_product_information.test_product_information" name="test_get_model_name" time="0.468"><system-out><![CDATA[


]]></system-out></testcase><testcase classname="test_product_information.test_product_information" name="test_get_serial_number" time="0.471"><system-out><![CDATA[


]]></system-out></testcase><testcase classname="test_product_information.test_product_information" name="test_get_software_version" time="0.471"><system-out><![CDATA[


]]></system-out></testcase></testsuite>